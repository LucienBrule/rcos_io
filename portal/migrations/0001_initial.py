# Generated by Django 4.1.3 on 2022-12-05 06:45

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Enrollment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("credits", models.IntegerField(default=0)),
                ("is_for_pay", models.BooleanField(default=False)),
                ("is_project_lead", models.BooleanField(default=False)),
                ("is_faculty_advisor", models.BooleanField(default=False)),
            ],
            options={
                "ordering": ["semester"],
                "get_latest_by": ["semester"],
            },
        ),
        migrations.CreateModel(
            name="Semester",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.CharField(max_length=6, primary_key=True, serialize=False),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="User-facing name of semester, e.g. Fall 2022",
                        max_length=30,
                    ),
                ),
                (
                    "is_accepting_new_projects",
                    models.BooleanField(
                        default=False,
                        help_text="Whether new projects can be proposed for this semester",
                    ),
                ),
                ("start_date", models.DateField(verbose_name="start of semester")),
                ("end_date", models.DateField(verbose_name="end of semester")),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_approved", models.BooleanField(default=False)),
                (
                    "role",
                    models.CharField(
                        choices=[("rpi", "RPI"), ("external", "External")],
                        max_length=30,
                    ),
                ),
                ("first_name", models.CharField(max_length=100, null=True)),
                ("last_name", models.CharField(max_length=100, null=True)),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("rcs_id", models.CharField(max_length=30, null=True)),
                ("graduation_year", models.PositiveIntegerField(null=True)),
                ("discord_user_id", models.CharField(max_length=200, null=True)),
                ("github_username", models.CharField(max_length=200, null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=100, unique=True)),
                ("is_approved", models.BooleanField(default=False)),
                ("tagline", models.CharField(max_length=200)),
                ("description_markdown", models.TextField(max_length=10000)),
                ("is_seeking_members", models.BooleanField(default=False)),
                (
                    "enrollments",
                    models.ManyToManyField(
                        through="portal.Enrollment", to="portal.user"
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="owned_projects",
                        to="portal.user",
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
                "get_latest_by": "created_at",
            },
        ),
        migrations.AddField(
            model_name="enrollment",
            name="project",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="portal.project",
            ),
        ),
        migrations.AddField(
            model_name="enrollment",
            name="semester",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="portal.semester"
            ),
        ),
        migrations.AddField(
            model_name="enrollment",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="enrollments",
                to="portal.user",
            ),
        ),
    ]
